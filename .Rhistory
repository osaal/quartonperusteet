?fs::path_tidy()
Sys.getenv("QUARTO_PROJECT_OUTPUT_DIR")
Sys.getenv("QUARTO_PROJECT_OUTPUT_FILES")
?fs::file_move
fs::path("docs/test")
?list.dirs
getwd()
list.dirs(recursive = TRUE)
list.files(path = "./docs")
list.files(path = "./test")
list.files(path = "./test")
list.files(path = "./test", recursive = TRUE)
list.files(path = "./test", recursive = TRUE, include.dirs = FALSE)
fs::dir_ls()
fs::dir_ls("test")
fs::dir_ls(recurse=TRUE)
fs::dir_ls(type = "file", recurse=TRUE)
??fs::path_tidy
source("~/Documents/Coding/quartonperusteet/_flatten-output.R", echo=TRUE)
?grep
grep("*.qmd", files)
grep("*.qmd", files, value = TRUE)
grep("*.qmd", files)[1]
files[grep("*.qmd", files)[1]]
files <-
grep("*.qmd", file_paths, value = TRUE)
file_paths <-
fs::dir_ls("test", type = "file", recurse = TRUE)
files <-
grep("*.qmd", file_paths, value = TRUE)
sapply(file_paths, fs::file_move, new_path = ".")
source("~/Documents/Coding/quartonperusteet/_flatten-output.R", echo=TRUE)
moved_files <-
fs::dir_ls(type = "file") |>
grep("*.qmd", x = _, value = TRUE)
source("~/Documents/Coding/quartonperusteet/_flatten-output.R", echo=TRUE)
moved_files[1]
paste0("*", moved_files[1])
grep(paste0("*", moved_files[1]), x = file_paths)
grep(paste0("*", moved_files[1]), x = file_paths, value = TRUE)
fs::file_move(moved_files[1], grep(paste0("*", moved_files[1]), x = file_paths, value = TRUE))
?sapply
?fs::file_move
# Save original file paths
orig_files <-
fs::dir_ls("test", type = "file", recurse = TRUE)
# Move files into top-level
sapply(orig_files, fs::file_move, new_path = ".")
# Save original file paths
orig_files <-
fs::dir_ls("test", type = "file", recurse = TRUE)
# Move files into top-level
sapply(orig_files, fs::file_move, new_path = ".")
# Find .qmd files to move back into original paths
moved_files <-
fs::dir_ls(type = "file") |>
grep("*.qmd", x = _, value = TRUE)
# Move files into original paths
sapply(
moved_files,
function(file) {
fs::file_move(
file,
grep(
paste0("*", file),
orig_files,
value = TRUE
))
})
# Save original file paths
orig_files <-
fs::dir_ls("test", type = "file", recurse = TRUE)
write.csv(orig_files, "orig_files.csv")
# Move files into top-level
sapply(orig_files, fs::file_move, new_path = ".")
?write
?read.delim
testi <- read.csv("orig_files.csv")
testi <- read.csv("orig_files.csv")[1]
testi <- read.csv("orig_files.csv")[1] |> as.vector()
testi <- read.csv("orig_files.csv")[1] |> as.character()
testi <- read.csv("orig_files.csv")[1,]
testi <- read.csv("orig_files.csv")[,1]
# Find .qmd files to move back into original paths
moved_files <-
fs::dir_ls(type = "file") |>
grep("*.qmd", x = _, value = TRUE)
# Move files into original paths
orig_paths <- read.csv("orig_files.csv")[,1]
sapply(
moved_files,
function(file) {
fs::file_move(
file,
grep(
paste0("*", file),
orig_paths,
value = TRUE
))
})
?grep
moved_files <-
fs::dir_ls(type = "file") |>
grep("^(?!index\.qmd$).+\.qmd$", x = _, value = TRUE)
moved_files <-
fs::dir_ls(type = "file") |>
grep("^(?!index\\.qmd$).+\\.qmd$", x = _, value = TRUE)
moved_files <-
fs::dir_ls(type = "file") |>
grep("^(?!index\\.qmd$).+\\.qmd$", x = _, perl = TRUE, value = TRUE)
source("_flatten-output.R")
?fs::file_move
source("~/Documents/Coding/quartonperusteet/_flatten-output.R", echo=TRUE)
?sapply
